name: Deploy App Python

on:
  push:
    branches: [ "main" ]

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest flake8
          pip install -r requirements.txt
          
      - name: Run flake8
        run: flake8 . --count --max-complexity=10 --max-line-length=127 --statistics
        
      - name: Run pytest
        run: pytest

  build:
    needs: quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            python -m pip install -r requirements.txt    

      - name: Gerar build (zip da aplicação)
        run: |
          mkdir build
          cp -r app.py requirements.txt templates build/
          cd build
          zip -r ../meuapp.zip .
          cd ..

      - name: Upload artefato
        uses: actions/upload-artifact@v4
        with:
          name: meuapp
          path: meuapp.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Login no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build da imagem
        run: docker build -t ${{ secrets.DOCKER_USER }}/meuapp:latest .

      - name: Push da imagem
        run: docker push ${{ secrets.DOCKER_USER }}/meuapp:latest
